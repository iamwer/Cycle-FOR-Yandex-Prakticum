/*Теперь выведите сами слова, заключённые в квадратные скобки. Например, если ввод был green parrot, вывод должен быть:
[green]
[parrot] 
Можно переиспользовать алгоритм предыдущей задачи. Там вы шли по строке и проверяли, является ли символ пробелом. 
Если символ не был пробелом, вы просто пропускали его и шли дальше. Теперь этот случай нужно будет обработать.
Создайте строковую переменную word, в которую будете складывать символ за символом из изначальной строки, если этот символ не пробел. 
Если пробел найден, выведите на экран [, накопленное слово и ], а word присвойте пустую строку, 
чтобы начать процесс заново со следующим словом из строки.

Те же, что и в прошлой задаче:
Между словами — один пробел.
Строка начинается со слова и заканчивается концом строки.
В запросе ровно одна строка.
Что отправлять на проверку
Отправьте на проверку файл main.cpp с реализацией задания.
Как будет тестироваться ваш код
В тестах будут случаи с разным количеством слов, разделённых пробелами. Случай с пустой строкой проверяться не будет.*/

#include <iostream>
#include <string>
 
using namespace std;
 
int main() {
    string query;
    getline(cin, query);
 
    string word;
    for (int i = 0; i < query.size(); ++i) {
        if (query[i] == ' ') {
            cout << '[' << word << ']' << endl;
            word = ""s;
        } else {
            word += query[i];
        }
    }
    cout << '[' << word << ']' << endl;
}
